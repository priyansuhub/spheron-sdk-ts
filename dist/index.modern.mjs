import t from"axios";import{v4 as a}from"uuid";import e from"form-data";import n from"fs";class r{constructor(t){this.apiKey=void 0,this.baseUrl=void 0,this.apiKey="Bearer "+t,this.baseUrl="https://api-v2.spheron.network"}async patchData(a,e){try{const{data:n}=await t.patch(`${this.baseUrl}${a}`,e,{headers:{accept:"application/json",charset:"utf-8",authorization:this.apiKey}});return n}catch(t){return t.response.data}}async putData(a,e){try{const{data:n}=await t.put(`${this.baseUrl}${a}`,e,{headers:{accept:"application/json",charset:"utf-8",authorization:this.apiKey}});return n}catch(t){return t.response.data}}async postData(a,e){try{const{data:n}=await t.post(`${this.baseUrl}${a}`,e,{headers:{accept:"application/json",charset:"utf-8",authorization:this.apiKey}});return n}catch(t){return t.response.data}}async deleteDataParam(a,e){try{const{data:n}=await t.delete(`${this.baseUrl}${a}`,{headers:{accept:"application/json",charset:"utf-8",authorization:this.apiKey},data:{userId:e}});return n}catch(t){return t.message}}async deleteData(a){try{const{data:e}=await t.delete(`${this.baseUrl}${a}`,{headers:{accept:"application/json",charset:"utf-8",authorization:this.apiKey}});return e}catch(t){return t.response.data}}async getData(a){try{const{data:e}=await t.get(`${this.baseUrl}${a}`,{headers:{accept:"application/json",charset:"utf-8",authorization:this.apiKey}});return e}catch(t){return t.message}}async postDataUpload(a,e){try{const{data:n}=await t.post(`${this.baseUrl}${a}`,e,{headers:{authorization:this.apiKey}});return n}catch(t){return t.message}}async getDataParam(a){try{const{data:e}=await t.post(`${this.baseUrl}${a}`,{headers:{accept:"application/json",charset:"utf-8",authorization:this.apiKey}});return e}catch(t){return t.message}}}function i(t,a,e){const r=n.readdirSync(t);for(const o of r){const r=t+"/"+o,s=a+o;n.statSync(r).isDirectory()?i(r,s+"/",e):e.append("files",n.createReadStream(r),{filepath:s})}}function o(t,a){const e=t.users;for(let t=0;t<e.length;t++)if(e[t]._id===a)return e[t];return"Invalid User"}class s extends r{}var c;c=s,[class extends r{async getOrganisationId(){return await this.getData("/v1/api-keys/scope")}},class extends r{async getOrganizationDetails(t){return await this.getData(`/v1/organization/${t}`)}async getOrganizationUsers(t){return await this.getData(`/v1/organization/${t}`).then(t=>t.users)}async getOrganizationUserById(t,a){return await this.getData(`/v1/organization/${t}`).then(t=>o(t,a))}async getUserPlatformProfile(t,a){return await this.getData(`/v1/organization/${t}`).then(t=>o(t,a)).then(t=>t.platformProfile)}async getAllProviderProfilesOfUser(t,a){return await this.getData(`/v1/organization/${t}`).then(t=>o(t,a)).then(t=>t.providerProfiles)}async getProviderProfileOfUserById(t,a,e){return await this.getData(`/v1/organization/${t}`).then(t=>o(t,a)).then(t=>function(t,a){const e=t.providerProfiles;for(let t=0;t<e.length;t++)if(e[t].id===a)return e[t];return"Invalid Profile Id"}(t,e))}async getUserOrganisationsById(t,a){return await this.getData(`/v1/organization/${t}`).then(t=>o(t,a)).then(t=>t.organizations)}async getWalletDetails(t){return await this.getData(`/v1/organization/${t}`).then(t=>t.wallet)}async getWalletNetworkDetails(t){return await this.getData(`/v1/organization/${t}`).then(t=>t.wallet).then(t=>t.networkDetails)}async getWalletTokenDetails(t){return await this.getData(`/v1/organization/${t}`).then(t=>t.wallet).then(t=>t.tokenDetails)}async getAllInvitedMembers(t){return await this.getData(`/v1/organization/${t}`).then(t=>t.invitedMembers)}async getInvitedMembersById(t,a){return await this.getData(`/v1/organization/${t}`).then(t=>function(t,a){const e=t.invitedMembers;for(let t=0;t<e.length;t++)if(e[t]._id===a)return e[t];return"Invited Id Not found"}(t,a))}async overdueStatus(t){return await this.getData(`/v1/organization/${t}/overdue`)}},class extends r{async getProjectDetailsById(t){return await this.getData(`/v1/project/${t}`)}async getProjectDeploymentEnvironments(t){return await this.getData(`/v1/project/${t}`).then(t=>t.deploymentEnvironments)}async getConfigurationDetailsById(t){return await this.getData(`/v1/project/${t}`).then(t=>t.configuration)}async getAllDomainDetailsOfProject(t){return await this.getData(`/v1/project/${t}`).then(t=>t.domains)}async getDomainDetailsOfProjectByName(t,a){return await this.getData(`/v1/project/${t}`).then(t=>function(t,a){const e=t.domains;for(let t=0;t<e.length;t++)if(e[t].name===a)return e[t]}(t,a))}},class extends r{async getDeploymentInfoByProjectId(t){return await this.getData(`/v1/project/${t}/deployments`)}async getDeploymentInfoByProjectIdLimit(t,a){return await this.getData(`/v1/project/${t}/deployments`).then(t=>function(t,a){let e;if(a<t.length){for(let n;n<a;n++)e.push(t[n]);return e}return t}(t,a))}async getDeploymentInfoByProjectStatus(t,a){return await this.getData(`/v1/project/${t}/deployments`).then(t=>function(t,a){let e,n;for(;n<e.length;n++)t[n].status===a&&e.push(t[n]);return e}(t,a))}async getDeploymentCount(t){return await this.getData(`/v1/project/${t}/deployments/count`)}},class extends r{async updateState(t,a){const e={state:a};return await this.patchData(`/v1/project/${t}/state`,e)}},class extends r{async putConfiguration(t,a){return await this.putData(`/v1/project/${t}/configuration`,a)}},class extends r{async getProjectOrg(t){return await this.getData(`/v1/organization/${t}/projects`)}async getProjectCountByState(t,a){const e=`/v1/organization/${t}/projects/count`;if(void 0!==a){const e=`/v1/organization/${t}/projects/count?state=${a}`;return await this.getData(e)}return await this.getData(e)}async getProjectCountUploadType(t,a){const e=`/v1/organization/${t}/projects/count`;if(void 0!==a){const e=`/v1/organization/${t}/projects/count?include_upload_type=${a.toString()}`;return await this.getData(e)}return await this.getData(e)}},class extends r{async getCouponDetails(t){return await this.getData(`/v1/organization/${t}/coupons`)}},class extends r{async deploy(t){return await this.postData("/v1/deployment/",t)}async getDeployment(t){return await this.getData(`/v1/deployment/${t}`)}async authorizeDeployment(t){return await this.postData(`/v1/deployment/${t}/authorize`,null)}async cancelDeployment(t){return await this.postData(`/v1/deployment/${t}/cancel`,null)}async redeployDeployment(t){return await this.postData(`/v1/deployment/${t}/redeploy`,null)}async defaultDeployment(t,e,n,r,i,o,s,c,p,l,u,h){const d={organizationId:t,gitUrl:e,repoName:n,uniqueTopicId:a(),configuration:{buildCommand:s,installCommand:c,workspace:p,publishDir:l,framework:u,nodeVersion:h},env:{},protocol:r,createDefaultWebhook:!0,provider:i,branch:o};return await this.postData("/v1/deployment/",d)}async suggestionFramework(t,a,e,n,r){const i=`/v1/deployment/framework/suggestion?owner=${t}&branch=${a}&repo=${e}&providerName=${n}&root=${r}`;return await this.getData(i)}async upload(t,a,n,r){const o=new e;i(r,"./",o);const s=`/v1/deployment/upload?protocol=${n}&organization=${t}&project=${a}`;return await this.postDataUpload(s,o)}},class extends r{async getDeploymentEnvironment(t){return await this.getData(`/v1/project/${t}/deployment-environments`)}async addDeploymentEnvironment(t,a,e,n){const r={name:a,branches:e,protocol:n};return await this.postData(`/v1/project/${t}/deployment-environments`,r)}async updateDeploymentEnvironment(t,a,e,n,r){const i={name:e,branches:n,protocol:r};return await this.putData(`/v1/project/${t}/deployment-environments/${a}`,i)}async deleteDeploymentEnvironmnet(t,a){return await this.deleteData(`/v1/project/${t}/deployment-environments/${a}`)}async activateDeploymentEnvironment(t,a){return await this.patchData(`/v1/project/${t}/deployment-environments/${a}/activate`,null)}async deactivateDeploymentEnvironment(t,a){return await this.patchData(`/v1/project/${t}/deployment-environments/${a}/deactivate`,null)}},class extends r{async getDomain(t){return await this.getData(`/v1/project/${t}/domains`)}async getDomainByDomainId(t,a){return await this.getData(`/v1/project/${t}/domains/${a}`)}async addDomainByProjectId(t,a){return await this.postData(`/v1/project/${t}/domains`,a)}async updateDomainByDomainId(t,a,e){return await this.patchData(`/v1/project/${t}/domains/${a}`,e)}async deleteDomainByDomainId(t,a){return await this.deleteData(`/v1/project/${t}/domains/${a}`)}async verifyDomainByProjectId(t,a){return await this.patchData(`/v1/project/${t}/domains/${a}/verify`,null)}},class extends r{async updateOrganizationProfileParams(t,a,e,n){const r={name:a,username:e,image:n};return await this.putData(`/v1/organization/${t}`,r)}async updateOrganizationProfile(t,a){return await this.putData(`/v1/organization/${t}`,a)}},class extends r{async getInvitesById(t){return await this.getData(`/v1/organization/${t}/invites`)}async inviteMembers(t,a){const e={userEmail:a};return await this.postData(`/v1/organization/${t}/invites`,e)}async deleteInvite(t,a){return await this.deleteData(`/v1/organization/${t}/invites/${a}`)}},class extends r{async addEnvironmentVariables(t,a,e,n){const r={environmentVariables:[{name:a,value:e,deploymentEnvironments:n}]};return await this.postData(`/v1/project/${t}/environment-variables`,r)}async updateEnvironmentVariable(t,a,e,n,r){const i={environmentVariables:[{name:e,value:n,deploymentEnvironments:r}]};return await this.putData(`/v1/project/${t}/environment-variables/${a}`,i)}async deleteEnvironmentVariable(t,a){return await this.deleteData(`/v1/project/${t}/environment-variables/${a}`)}}].forEach(t=>{Object.getOwnPropertyNames(t.prototype).forEach(a=>{Object.defineProperty(c.prototype,a,Object.getOwnPropertyDescriptor(t.prototype,a))})});export{s as default};
